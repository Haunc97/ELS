@using ELS.WebApp.Models;
@using static ELS.WebApp.Pages.Activities.TestVocabulary;

<div class="card">
    <div class="card-body">
        <p>
            <strong>@(Question.No + ". " + @Question.Term)</strong>
            @if (IsSubmitted)
            {
                @if (!Question.IsCorrect)
                {
                    <span class="oi oi-x text-danger" style="margin-left: 7px"></span>
                }
                else
                {
                    <span class="oi oi-check text-success" style="margin-left: 7px"></span>
                }
            }
        </p>
        <div class="container-fluid">
            <div class="row">
                @for (int i = 0; i < Question.Options.Count; i++)
                {
                    <div @key="i" class="form-check col-lg-6">
                        <input @onchange="@((ChangeEventArgs args) => OnOptionSelected(args))"
                               type="radio"
                               class="form-check-input"
                               name="@Question.No"
                               id="@Question.No"
                               disabled="@IsSubmitted"
                               value="@Question.Options[i]">
                        <label class="@(IsSubmitted && !Question.IsCorrect && Question.Options[i].ToLower().Trim() == Question.Definition.ToLower().Trim() ? "text-success fw-bold form-check-label" : "form-check-label")" for="@Question.No">@Question.Options[i]</label>
                    </div>
                }
            </div>
        </div>

    </div>
</div>

@code {
    [Parameter]
    public QuestionModel Question { get; set; }

    [Parameter]
    public bool IsSubmitted { get; set; } = false;

    [Parameter]
    public EventCallback<AnswerModel> OnSelected { get; set; }

    private void OnOptionSelected(ChangeEventArgs args)
    {
        var selectedValue = args.Value.ToString();
        this.OnSelected.InvokeAsync(new AnswerModel
            {
                QuestionNo = Question.No,
                Answer = selectedValue
            });
    }
}