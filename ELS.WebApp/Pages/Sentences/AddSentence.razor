@page "/addsentence"
@using System.ComponentModel.DataAnnotations;
@using ELS.UseCase.Utils;
@inject NavigationManager NavigationManager;
@inject IMediator Mediator

<PageTitle>Add Sentence</PageTitle>

<h3>Add Sentence</h3>
<ToastComponent Show="showSuccessToast"
                Title="Sentence"
                Message="Add new sentence successfully."
                ToastDisplayToggled="@(() => showSuccessToast = false)">
</ToastComponent>
<br />
<EditForm Model="Model" OnValidSubmit="SaveSentence">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="row">
        <div class="col-lg-6">
            <div class="form-group required">
                <label for="term">Term</label>
                <InputTextArea id="term"
                           placeholder="Enter English"
                           @bind-Value="Model.Term"
                           class="form-control">
                </InputTextArea>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group required">
                <label for="def">Definition</label>
                <InputTextArea id="def"
                           placeholder="Vietnamese"
                           @bind-Value="Model.Definition"
                           class="form-control">
                </InputTextArea>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-6">
            <div class="form-group">
                <label for="ipa">Phonetics</label>
                <InputTextArea id="ipa"
                           placeholder="IPA transcription"
                           @bind-Value="Model.Phonetics"
                           class="form-control">
                </InputTextArea>
            </div>
        </div>
        <div class="col-lg-6">
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-6">
        </div>
        <div class="col-lg-6">
        </div>
    </div>
    <br />

    @*Form footer*@
    <div class="d-flex justify-content-end">
        <div class="btn-container">
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="submit" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </div>
    </div>
</EditForm>

@code {
    private AddSentenceModel Model { get; set; } = new AddSentenceModel();
    private bool showSuccessToast = false;

    private async Task SaveSentence()
    {
        var model = new Commands.Sentences.AddSentence.AddSentenceCommand(
            Model.Term,
            Model.Definition,
            "System",
            Model.Phonetics);

        var vocId = await Mediator.Send(model);

        if (!showSuccessToast) showSuccessToast = true;

        Model = new AddSentenceModel();
    }

    void ToastDisplayToggled(bool show)
    {
        showSuccessToast = show;
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/sentences");
    }

    public class AddSentenceModel
    {
        [Required]
        public string Term { get; set; }

        [Required]
        public string Definition { get; set; }

        public string Phonetics { get; set; }
    }
}